/*
 * generated by Xtext 2.18.0
 */
package org.jucmnav.turn.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.jucmnav.turn.turn.URNspec
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith

@ExtendWith(InjectionExtension)
@InjectWith(TurnInjectorProvider)
class TurnParsingTest {
	@Inject
	ParseHelper<URNspec> parseHelper
	
	@Test
	def void loadModel() {
		val result = parseHelper.parse('''
			urnModel example
			
			actor A#"Teacher" {
				importance 100
				softgoal Motivation#"Increaase Motivation" {
			        contributesTo Productivity correlated with make
			        dependsOn B.Guide
				}
			    softgoal Productivity#"Increase Productivity" {
			       dependsOn Task
				}
			    task Task#"Task"{   
			     contributesTo Motivation correlated with 90
			     dependsOn abc.Respect
			    }
			}
			
			actor B#"Student"{  
			    softgoal Guide#"Guide"
			    { }
			}
			
			actor abc#"Parent"{
			    goal Respect#"Respect"{}
			}
			
			
			
			strategy abc#"ABC"{
			    A.Motivation exceeding evaluation satisfied
			   
			}
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
	}
}
